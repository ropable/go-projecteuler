// euler.go
// My efforts to learn the Go syntax by solving Project Euler problems.
// https://projecteuler.net/
package euler

import (
    "os"
    "path/filepath"
    "math"
    "fmt"
)

func main() {
    if len(os.Args) == 1 {
        fmt.Printf("Output solution to problem <integer>. Usage: %s <integer>\n", filepath.Base(os.Args[0]))
        os.Exit(1)
    }
    problemNo := os.Args[1]
    if (problemNo == "1") {
        ProblemOne()
    } else if (problemNo == "2") {
        ProblemTwo()
    }
}

func ProblemOne() {
    // Problem 1
    // Multiples of 3 and 5
    // If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
    // The sum of these multiples is 23.
    // Find the sum of all the multiples of 3 or 5 below 1000.
    sum := 0.0
    // Loop from 1 to 999; if i modulo 3 or i modulo 5 is 0, add i to the sum.
    for i := 1.0; i < 1000.0; i++ {
        if (math.Mod(i, 3.0) == 0 || math.Mod(i, 5.0) == 0) {
            sum = sum + i
        }
    }
    fmt.Println(int(sum))
}

func ProblemTwo() {
    // Problem 2
    // Even Fibonacci numbers
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    // By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    // find the sum of the even-valued terms.
    fib := []int{1, 2}  // Instantiate a slice of integers: [1 2]
    // First generate the Fibonacci sequence.
    for {  // Infinite loop.
        // Stop once the sequence value exceeds four million.
        if (fib[len(fib)-1] + fib[len(fib)-2] > 4000000) {
            break
        }
        i := fib[len(fib)-1] + fib[len(fib)-2]
        fib = append(fib, i)  // Built-in function append.
    }
    sum := 0
    // Now iterate over the slice elements, summing the even values.
    for i := range fib {
        if (math.Mod(float64(fib[i]), 2.0) == 0.0) {
            sum = sum + fib[i]
        }
    }
    fmt.Println(int(sum))
}
